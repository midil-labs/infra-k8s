# Default configuration for OneKG microservices
# These values can be overridden by service-specific configs

# Service identification (set by parent app)
serviceName: ""
replicaCount: 2

# Image configuration (set by parent app)
image:
  repository: ""
  tag: ""
  pullPolicy: IfNotPresent
  pullSecrets:
    - name: ghcr-secret

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8000

# Ingress configuration
ingress:
  enabled: true
  path: ""  # Set by parent app (/v1/service)
  entryPoints:
    - websecure

# Global settings (inherited from parent app)
global:
  gateway:
    domain: ""  # Set by parent app
    tls:
      secretName: ""
  cors:
    environment: "production"
    allowedOrigins: {}
    allowedMethods: []
    allowedHeaders: []
    allowCredentials: true
    maxAge: 86400

# CORS middleware
cors:
  enabled: true

# Resource management (can be overridden)
resources:
  requests:
    cpu: "100m"
    memory: "128Mi"
  limits:
    cpu: "500m"
    memory: "512Mi"

# Auto-scaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 75

# Health checks
healthCheck:
  enabled: true
  path: /health
  port: 8000
  
# Probes configuration
probes:
  liveness:
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 2
    failureThreshold: 3
  readiness:
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
  startup:
    failureThreshold: 30
    periodSeconds: 10

# Monitoring
monitoring:
  enabled: false
  port: "9090"
  path: "/metrics"

# Security
security:
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Affinity and tolerations
nodeSelector: {}
tolerations: []
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - "{{ .Values.serviceName }}"
        topologyKey: "kubernetes.io/hostname"

# Environment variables
env: []
envFrom: []

# Centralized logging
logging:
  enabled: false
